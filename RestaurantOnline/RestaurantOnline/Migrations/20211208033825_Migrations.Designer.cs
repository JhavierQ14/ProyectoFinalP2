// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantOnline.Data;

namespace RestaurantOnline.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211208033825_Migrations")]
    partial class Migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Carrito", b =>
                {
                    b.Property<int>("carrito_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cantidadP")
                        .HasColumnType("int");

                    b.Property<int>("producto_Fk")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("usuario_Fk")
                        .HasColumnType("int");

                    b.HasKey("carrito_id");

                    b.HasIndex("producto_Fk");

                    b.HasIndex("usuario_Fk");

                    b.ToTable("tbl_Carrito");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_DetalleOrden", b =>
                {
                    b.Property<int>("detalleOden_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("orden_FK")
                        .HasColumnType("int");

                    b.Property<int>("producto_Fk")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalFinal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("detalleOden_id");

                    b.HasIndex("orden_FK");

                    b.HasIndex("producto_Fk");

                    b.ToTable("tbl_DetalleOrden");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Documento", b =>
                {
                    b.Property<int>("documento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("documento_id");

                    b.ToTable("tbl_Documento");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Domicilio", b =>
                {
                    b.Property<int>("domicilio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuario_Fk")
                        .HasColumnType("int");

                    b.HasKey("domicilio_id");

                    b.HasIndex("usuario_Fk");

                    b.ToTable("tbl_Domicilio");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Menu", b =>
                {
                    b.Property<int>("menu_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreMenu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("menu_id");

                    b.ToTable("tbl_Menu");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_MetodoPago", b =>
                {
                    b.Property<int>("metodoPago_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreMetodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("metodoPago_id");

                    b.ToTable("tbl_MetodoPago");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Orden", b =>
                {
                    b.Property<int>("orden_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codOrden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("documento_Fk")
                        .HasColumnType("int");

                    b.Property<string>("estadoOrden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaOrden")
                        .HasColumnType("datetime2");

                    b.Property<int>("metodoPago_FK")
                        .HasColumnType("int");

                    b.Property<int>("user_FK")
                        .HasColumnType("int");

                    b.HasKey("orden_id");

                    b.HasIndex("documento_Fk");

                    b.HasIndex("metodoPago_FK");

                    b.HasIndex("user_FK");

                    b.ToTable("tbl_Orden");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Producto", b =>
                {
                    b.Property<int>("producto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaCreacionP")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("menu_Fk")
                        .HasColumnType("int");

                    b.Property<string>("nombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("precioP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("producto_id");

                    b.HasIndex("menu_Fk");

                    b.ToTable("tbl_Producto");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_RolUsuario", b =>
                {
                    b.Property<int>("rolUser_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rolUser_id");

                    b.ToTable("tbl_RolUsuario");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_User", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidoU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correoU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("encryptionU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rolUser_Fk")
                        .HasColumnType("int");

                    b.Property<int?>("telefonoU")
                        .HasColumnType("int");

                    b.HasKey("usuario_id");

                    b.HasIndex("rolUser_Fk");

                    b.ToTable("tbl_User");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Carrito", b =>
                {
                    b.HasOne("RestaurantOnline.Entidades.tbl_Producto", "TblProducto")
                        .WithMany("TblCarritoes")
                        .HasForeignKey("producto_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantOnline.Entidades.tbl_User", "TblUser")
                        .WithMany("TblCarritoes")
                        .HasForeignKey("usuario_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProducto");

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_DetalleOrden", b =>
                {
                    b.HasOne("RestaurantOnline.Entidades.tbl_Orden", "TblOrden")
                        .WithMany("TblDetalleOrdens")
                        .HasForeignKey("orden_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantOnline.Entidades.tbl_Producto", "TblProducto")
                        .WithMany("TblDetalleOrdens")
                        .HasForeignKey("producto_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblOrden");

                    b.Navigation("TblProducto");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Domicilio", b =>
                {
                    b.HasOne("RestaurantOnline.Entidades.tbl_User", "TblUser")
                        .WithMany("TblDomicilios")
                        .HasForeignKey("usuario_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Orden", b =>
                {
                    b.HasOne("RestaurantOnline.Entidades.tbl_Documento", "TblDocumento")
                        .WithMany("TblOrdens")
                        .HasForeignKey("documento_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantOnline.Entidades.tbl_MetodoPago", "TblMetodoPago")
                        .WithMany("TblOrdens")
                        .HasForeignKey("metodoPago_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantOnline.Entidades.tbl_User", "TblUser")
                        .WithMany("TblOrdens")
                        .HasForeignKey("user_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblDocumento");

                    b.Navigation("TblMetodoPago");

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Producto", b =>
                {
                    b.HasOne("RestaurantOnline.Entidades.tbl_Menu", "TblMenu")
                        .WithMany("TblProductoes")
                        .HasForeignKey("menu_Fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblMenu");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_User", b =>
                {
                    b.HasOne("RestaurantOnline.Entidades.tbl_RolUsuario", "TblRolUsuario")
                        .WithMany("TblUsers")
                        .HasForeignKey("rolUser_Fk");

                    b.Navigation("TblRolUsuario");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Documento", b =>
                {
                    b.Navigation("TblOrdens");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Menu", b =>
                {
                    b.Navigation("TblProductoes");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_MetodoPago", b =>
                {
                    b.Navigation("TblOrdens");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Orden", b =>
                {
                    b.Navigation("TblDetalleOrdens");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_Producto", b =>
                {
                    b.Navigation("TblCarritoes");

                    b.Navigation("TblDetalleOrdens");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_RolUsuario", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("RestaurantOnline.Entidades.tbl_User", b =>
                {
                    b.Navigation("TblCarritoes");

                    b.Navigation("TblDomicilios");

                    b.Navigation("TblOrdens");
                });
#pragma warning restore 612, 618
        }
    }
}
